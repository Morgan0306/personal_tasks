name: Build and Deploy to Local IIS

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: self-hosted  # 使用本機 GitHub Runner

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --configuration Release --no-restore

   # - name: Run tests
   #   run: dotnet test --no-build --verbosity normal

    - name: Publish project
      run: dotnet publish ./personal_tasks/personal_tasks.csproj -c Release -o ./publish

    - name: Deploy to IIS
      shell: powershell
      run: |
       $sitePath = "G:\code\Csharp\CI_test"
        $appPool = "CI_test"
        
        try {
          Stop-WebAppPool -Name $appPool -ErrorAction Stop
          Write-Host "✅ App pool '$appPool' stopped."
        } catch {
          Write-Warning "⚠️ App pool '$appPool' may already be stopped or not found: $_"
        }
        
        $maxRetry = 10
        $waitSeconds = 2
        for ($i = 0; $i -lt $maxRetry; $i++) {
          $processes = Get-Process w3wp -ErrorAction SilentlyContinue | Where-Object {
            $_.Path -like "*CI_test*"
          }
          if ($processes) {
            Write-Host "等待 IIS AppPool 關閉中...($($i+1)/$maxRetry)"
            Start-Sleep -Seconds $waitSeconds
          } else {
            break
          }
        }
        
        Get-ChildItem -Path $sitePath -Recurse -Force -ErrorAction SilentlyContinue | ForEach-Object {
          try {
            $_.IsReadOnly = $false
          } catch {}
        }
        Get-ChildItem -Path $sitePath -Recurse -Force -ErrorAction SilentlyContinue | ForEach-Object {
          try {
            Remove-Item -Path $_.FullName -Force -Recurse -ErrorAction Stop
          } catch {
            Write-Warning "⚠️ 無法刪除檔案：$($_.FullName) - $_"
          }
        }
        Copy-Item -Path "./publish/*" -Destination $sitePath -Recurse -Force
        Start-WebAppPool -Name $appPool
        Write-Host "✅ Deployment to IIS site '$appPool' completed."

